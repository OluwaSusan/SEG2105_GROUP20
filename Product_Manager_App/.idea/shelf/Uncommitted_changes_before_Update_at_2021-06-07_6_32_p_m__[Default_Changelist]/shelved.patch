Index: app/src/main/java/com/example/productmanagerapp/MyDBHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.productmanagerapp;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.util.Log;\r\n\r\npublic class MyDBHandler extends SQLiteOpenHelper{\r\n\r\n    private static final int DATABASE_VERSION = 1;\r\n    private static final String DATABASE_NAME = \"productDB.db\";\r\n    private static final String TABLE_PRODUCTS = \"products\";\r\n    private static final String COLUMN_ID = \"_id\";\r\n    private static final String COLUMN_PRODUCTNAME = \"productname\";\r\n    private static final String COLUMN_PRICE = \"price\";\r\n\r\n    //constructor\r\n    public MyDBHandler (Context context){\r\n\r\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db){\r\n\r\n        String CREATE_PRODUCTS_TABLE = \"CREATE TABLE \" + TABLE_PRODUCTS + \"(\" + COLUMN_ID +\r\n                \" INTEGER PRIMARY KEY,\" + COLUMN_PRODUCTNAME + \"TEXT,\" + COLUMN_PRICE + \" DOUBLE\" +\r\n                \")\";\r\n\r\n        db.execSQL(CREATE_PRODUCTS_TABLE);\r\n\r\n    }\r\n    \r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_PRODUCTS);\r\n        onCreate(db);\r\n    }\r\n\r\n\r\n    public void addProduct(Product product){\r\n\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        ContentValues values = new ContentValues();\r\n        values.put(COLUMN_PRODUCTNAME, product.getProductName());\r\n        values.put(COLUMN_PRICE, product.getPrice());\r\n\r\n        db.insert(TABLE_PRODUCTS, null, values);\r\n        db.close();\r\n\r\n    }\r\n\r\n    public Product findProduct(String productname){\r\n\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        String query = \"SELECT * FROM \" + TABLE_PRODUCTS + \"WHERE \" + COLUMN_PRODUCTNAME +\r\n                \" = \\\"\" + productname + \"\\\"\";\r\n        Cursor cursor = db.rawQuery(query, null);\r\n\r\n        Product product = new Product ();\r\n        if (cursor.moveToFirst()){\r\n            Log.d(\"\", \"findProduct: \");\r\n            product.setID(Integer.parseInt(cursor.getString( 0)));\r\n            product.setProductName(cursor.getString(1));\r\n            product.setPrice(Double.parseDouble(cursor.getString(2)));\r\n            cursor.close();\r\n\r\n        }else{\r\n            product = null;\r\n        }\r\n        db.close();\r\n        return product;\r\n    }\r\n\r\n    public boolean deleteProduct(String productname){\r\n\r\n        boolean result = false;\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        String query = \"SELECT * FROM\" + TABLE_PRODUCTS + \"WHERE \" + COLUMN_PRODUCTNAME + \" = \\\"\"\r\n                + productname + \"\\\"\";\r\n        Cursor cursor = db.rawQuery(query, null);\r\n\r\n        if(cursor.moveToFirst()){\r\n            String idStr = cursor.getString(0);\r\n            db.delete(TABLE_PRODUCTS, COLUMN_ID + \" = \" + idStr, null);\r\n\r\n            cursor.close();\r\n            result = true;\r\n\r\n        }\r\n        db.close();\r\n        return result;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/productmanagerapp/MyDBHandler.java	(revision 8e483bc44b4a7ea97d9005b44652299049979097)
+++ app/src/main/java/com/example/productmanagerapp/MyDBHandler.java	(date 1623104494073)
@@ -89,7 +89,6 @@
         if(cursor.moveToFirst()){
             String idStr = cursor.getString(0);
             db.delete(TABLE_PRODUCTS, COLUMN_ID + " = " + idStr, null);
-
             cursor.close();
             result = true;
 
Index: app/src/main/java/com/example/productmanagerapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.productmanagerapp;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.os.Bundle;\r\nimport android.widget.Button;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    Button btnAdd, btnFind, btnDelete;\r\n    TextView idView;\r\n    EditText productBox;\r\n    EditText priceBox;\r\n    \r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        \r\n        //set variables to the ids of .xml elements\r\n        idView = (TextView) findViewById(R.id.productID);\r\n        productBox = (EditText) findViewById(R.id.productName);\r\n        priceBox = (EditText) findViewById(R.id.productPrice);\r\n        btnAdd = findViewById(R.id.btnAdd);\r\n        btnFind = findViewById(R.id.btnFind);\r\n        btnDelete = findViewById(R.id.btnDelete);\r\n\r\n        setClickListener();\r\n    }\r\n\r\n    private void setClickListener(){\r\n\r\n        btnAdd.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v){\r\n\r\n                if (productBox.getText().toString().isEmpty() || priceBox.getText().toString().isEmpty()){\r\n                    idView.setText(\"Incomplete Entry\");\r\n                }\r\n                else{\r\n                    newProduct(v);\r\n                }\r\n            }\r\n        });\r\n\r\n        btnFind.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v){\r\n                if (productBox.getText().toString().isEmpty()){\r\n                    idView.setText(\"Enter a Product Name\");\r\n                }\r\n                else{\r\n                    lookupProduct(v);\r\n                }\r\n            }\r\n        });\r\n\r\n        btnDelete.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v){\r\n                if (productBox.getText().toString().isEmpty()){\r\n                    idView.setText(\"No Product Entered\");\r\n                }\r\n                else {\r\n                    removeProduct(v);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void newProduct(View view){\r\n        MyDBHandler dbHandler = new MyDBHandler((this));\r\n\r\n        //get price from the text box\r\n        double price = Double.parseDouble(priceBox.getText().toString());\r\n\r\n        //get product name from the text box\r\n        //use the constructor from Product.java\r\n        Product product = new Product(productBox.getText().toString(), price);\r\n        product.setID(11);\r\n\r\n        //add to database with the addProduct() method from MyDBHandler.java\r\n        dbHandler.addProduct(product);\r\n\r\n        //clear the text boxes\r\n        productBox.setText(\"\");\r\n        priceBox.setText(\"\");\r\n    }\r\n\r\n    public void lookupProduct (View view){\r\n\r\n        MyDBHandler dbHandler = new MyDBHandler(this);\r\n\r\n        //get product in the database using findProduct() method from MyDBHandler.java\r\n        Product product = dbHandler.findProduct(productBox.getText().toString());\r\n\r\n        //if found, then display the product details\r\n        //if not, display \"No Match Found\"\r\n        if(product != null){\r\n            idView.setText(String.valueOf(product.getID()));\r\n            priceBox.setText(String.valueOf(product.getPrice()));\r\n        }else{\r\n            idView.setText(\"No Match Found\");\r\n        }\r\n    }\r\n    \r\n    public void removeProduct(View view){\r\n        MyDBHandler dbHandler = new MyDBHandler(this);\r\n        \r\n        //delete product in the database using deleteProduct() method from MyDBHandler.java\r\n        boolean result = dbHandler.deleteProduct(productBox.getText().toString());\r\n        \r\n        //\"Record Deleted\" or \"No Match Found\"\r\n        if(result){\r\n            idView.setText(\"Record Deleted\");\r\n            productBox.setText(\"\");\r\n            priceBox.setText(\"\");\r\n        }\r\n        else{\r\n            idView.setText(\"No Match Found\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/productmanagerapp/MainActivity.java	(revision 8e483bc44b4a7ea97d9005b44652299049979097)
+++ app/src/main/java/com/example/productmanagerapp/MainActivity.java	(date 1623105175079)
@@ -120,4 +120,13 @@
             idView.setText("No Match Found");
         }
     }
+
+    public void displayProducts() {
+        arrayList = new ArrayList<>(MyDBHandler.ge);
+        recyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));
+        recyclerView.setItemAnimator(new DefaultItemAnimator());
+        NotesAdapter adapter = new NotesAdapter(getApplicationContext(), this, arrayList);
+        recyclerView.setAdapter(adapter);
+    }
+
 }
\ No newline at end of file
